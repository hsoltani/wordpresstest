---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Values.enviroment }}-wordpress-pv-claim
  namespace: {{ .Values.enviroment }}
  labels:
    app: {{ .Values.enviroment }}
spec:
  storageClassName: {{ .Values.enviroment }}-wordpress-local
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Gi
---
apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: {{ .Values.enviroment }}-wordpress
  namespace: {{ .Values.enviroment }}
  labels:
    app: {{ .Values.enviroment }}
spec:
  selector:
    matchLabels:
      app: {{ .Values.enviroment }}
      tier: {{ .Values.enviroment }}-frontend
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: {{ .Values.enviroment }}
        tier: {{ .Values.enviroment }}-frontend
    spec:
      dnsPolicy: "None"
      dnsConfig:
        nameservers:
          - 10.96.0.10
        searches:
          - default.svc.cluster.local
          - svc.cluster.local
          - cluster.local
          - vserver-on.de
      containers:
      - image: {{ .Values.wordpress.image }}
        name: wordpress
        env:
        - name: WORDPRESS_DEBUG
          value: '0'
        - name: WORDPRESS_DB_HOST
          value: {{ .Values.enviroment }}-mysql.{{ .Values.enviroment }}.svc.cluster.local:3306
        - name: WORDPRESS_DB_NAME
          value: 'tausendbuecher'
        - name: WORDPRESS_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.enviroment }}-mysql-pass
              key: password
        - name: WORDPRESS_TABLE_PREFIX
          value: 'new_'
        ports:
        - containerPort: 80
          name: wordpress
        volumeMounts:
        - name: wordpress-persistent-storage
          mountPath: /var/www/html
      volumes:
      - name: wordpress-persistent-storage
        persistentVolumeClaim:
          claimName: {{ .Values.enviroment }}-wordpress-pv-claim
